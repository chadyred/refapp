<?php

namespace melon\RefappBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ServeurRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ServeurRepository extends EntityRepository
{
	
	public function search($dataNom, $dataIp, $dataHostName,$dataTypeServeur,$dataEnvironnement,
			$dataLangage, $dataOs,$dataServeurWeb){
		$qb = $this->createQueryBuilder('a');
		if ($dataNom != NULL){
			$qb->andWhere("a.nom LIKE :nomServ")->orderBy('a.nom', 'ASC')->setParameter('nomServ', '%'.$dataNom.'%');
		}
		if ($dataIp != NULL){
			$qb->andWhere("a.ip LIKE :IpServ")->orderBy('a.ip', 'ASC')->setParameter('IpServ', '%'.$dataIp.'%');
		}
		if ($dataHostName != NULL){
			$qb->andWhere("a.hostname LIKE :hostnameServ")->orderBy('a.hostname', 'ASC')->setParameter('hostnameServ', '%'.$dataHostName.'%');
		}
		if ($dataTypeServeur != NULL){
			$qb->andWhere("a.typeServeur LIKE :typeServeurServ")->orderBy('a.typeServeur', 'ASC')->setParameter('typeServeurServ', '%'.$dataTypeServeur.'%');
		}
	
		if ($dataEnvironnement != NULL){
			$qb->innerJoin('a.environnements', 'do', 'WITH', 'do.nom = :nomEnv')
			->addSelect('do')
			->setParameter('nomEnv', $dataEnvironnement);
		}
		
		$qb->leftJoin('a.environnements', 'env')->leftJoin('env.composants','composant');
			
			if ($dataLangage != NULL){
				$qb->andWhere("composant.nomComplet LIKE :motcle1")
				->setParameter('motcle1', '%'.$dataLangage->getNomComplet().'%');
			}
			if ($dataOs != NULL){
				$qb->leftJoin('a.environnements', 'env2')->leftJoin('env2.composants','composant2');
				$qb->andWhere("composant2.nomComplet LIKE :motcle2")
				->setParameter('motcle2', '%'.$dataOs->getNomComplet().'%');	
			}
			if ($dataServeurWeb != NULL){
				$qb->leftJoin('a.environnements', 'env3')->leftJoin('env3.composants','composant3');
				$qb->andWhere("composant3.nomComplet LIKE :motcle3")
				->setParameter('motcle3', '%'.$dataServeurWeb->getNomComplet().'%');
			}
						
			
		return $qb->getQuery()->getResult();
	
	}
}
